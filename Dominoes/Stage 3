import random
domino_snake = []
def who_start(computer, player):
    highest_computer = -1
    highest_player = -1
    i_c = 0
    i_p = 0
    for i, d in enumerate(computer):
        if d[0] == d[1] and d[0] > highest_computer:
            highest_computer = d[0]
            i_c = i
    for i, d in enumerate(player):
        if d[0] == d[1] and d[0] > highest_player:
            highest_player = d[0]
            i_p = i

    if highest_computer > highest_player :
        return ["computer", i_c]
    elif highest_computer < highest_player:
        return ["player", i_p]
    else:
        return None

def check_if_draw(d):
    k = 0
    if d[0][0] == d[len(d)-1][1]:
        for v in d:
            if d[0][0] in v:
                k += 1
        if k == 8:
            return True
    return False

def snake_printer(s):
    if len(s) > 6:
        print(*s[:3], "...", *s[-3:], sep="", end="\n")
    else:
        print(*s, sep="", end="\n")


while True:
    dominoes_full_set = [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6],
                         [1, 1], [1, 2], [1, 3], [1, 4], [1, 5], [1, 6],
                         [2, 2], [2, 3], [2, 4], [2, 5], [2, 6],
                         [3, 3], [3, 4], [3, 5], [3, 6],
                         [4, 4], [4, 5], [4, 6],
                         [5, 5], [5, 6],
                         [6, 6]]
    computer_dominoes = []
    player_dominoes = []
    for i in range(7):
        computer_dominoes.append(dominoes_full_set.pop(random.randint(0, len(dominoes_full_set) - 1)))
        player_dominoes.append(dominoes_full_set.pop(random.randint(0, len(dominoes_full_set) - 1)))
    who_turn = who_start(computer_dominoes, player_dominoes)
    if who_turn[0] == "computer" or who_turn[0] == "player":
        break

if who_turn[0] == "computer":
    domino_snake.append(computer_dominoes.pop(who_turn[1]))
elif who_turn[0] == "player":
    domino_snake.append(player_dominoes.pop(who_turn[1]))

while True:
    print(70 * "=")
    print("Stock size: {}".format(len(dominoes_full_set)))
    print("Computer pieces: {}\n".format(len(computer_dominoes)))
    snake_printer(domino_snake)
    print("Your pieces:")
    for i, p in enumerate(player_dominoes):
        print("{}: {}".format(i + 1, p))

    # check game result
    if len(player_dominoes) == 0:
        print("\nStatus: The game is over. You won!")
        break
    elif len(computer_dominoes) == 0:
        print("\nStatus: The game is over. The computer won!")
        break
    elif check_if_draw(domino_snake):
        print("\nStatus: The game is over. It's a draw!")
        break

    if who_turn[0] == "computer":
        who_turn[0] = "player"
        print("\nStatus: It's your turn to make a move. Enter your command.")
        while True:
            player_choice = 0
            try:
                player_choice = int(input())
            except ValueError:
                print("\nInvalid input. Please try again.")
                continue
            if not(player_choice > len(player_dominoes) or player_choice < -len(player_dominoes)):
                break
            else:
                print("\nInvalid input. Please try again.")
                continue

        if player_choice > 0:
            domino_snake.append(player_dominoes.pop(player_choice - 1))
        elif player_choice < 0:
            domino_snake.insert(0, player_dominoes.pop(-player_choice - 1))
        elif player_choice == 0 and len(dominoes_full_set) > 0:
            player_dominoes.append(dominoes_full_set.pop(random.randint(0, len(dominoes_full_set) - 1)))

    elif who_turn[0] == "player":
        who_turn[0] = "computer"
        print("\nStatus: Computer is about to make a move. Press Enter to continue...")
        pass_game = input()
        len_c = len(computer_dominoes) - 1
        if len_c > 0:
            random_choice = random.choice([el for el in list(range(-len_c, len_c)) if el != 0])
            if random_choice > 0:
                domino_snake.append(computer_dominoes.pop(random_choice))
            elif random_choice < 0:
                domino_snake.insert(0, computer_dominoes.pop(-random_choice))
        else:
            domino_snake.append(computer_dominoes.pop(0))
